void main(
  float4 color : TEXCOORD0,
  float3 pCrossMinV   : TEXCOORD1,
  float3 minUCrossP   : TEXCOORD2,
  float3 uCrossV   : TEXCOORD3,
  float depthin : TEXCOORD4,
  float2 wpos : WPOS,
  
  uniform float near,
  uniform float2 unproj_scale,
  uniform float2 unproj_offset,
  
  uniform float zb_scale,
  uniform float zb_offset,
  
  uniform float epsilon,
  
  out float depthout : DEPTH,
  out float4 colorout : COLOR0)
{  
  float3 qn = float3(wpos*unproj_scale - unproj_offset, -near);
  float dn = dot(qn, uCrossV);
  float u = dot(qn, pCrossMinV)/dn;
  float v = dot(qn, minUCrossP)/dn;
  
  float dist_sq = u * u + v * v;  
  if(dist_sq > 1.0)
  {
    discard;
  }
  
  float dist = sqrt(dist_sq);
  float weight = smoothstep(1.0, 0.0, dist);
  
  colorout = float4(color.rgb, weight);
  
  float qz = qn.z * depthin/dn + epsilon;
  depthout = zb_scale/qz + zb_offset;
}
