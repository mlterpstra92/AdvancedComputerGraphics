void main(
	float2 wpos : WPOS,
	float2 pscreen : TEXCOORD0, // position of particle in window coordinates
	float sphereRadius : TEXCOORD1,
	float4 eye_pos : TEXCOORD2,

	uniform float4x4 projection_mat,
	uniform float point_radius,

	out float depth_out : DEPTH,
	out float4 col  : COLOR
	)
{
	//squared distance between particle point in screen space and fragment position
	float2 diff = pscreen - wpos;
	float dist_screen = dot(diff, diff) / (sphereRadius * sphereRadius);
	// Discard fragment if it falls outside the sphere
	if(dist_screen > 1.0)
	{
		discard;
	}

	// Set z component along the view direction
	float3 normal = float3(normalize(diff), -sqrt(1.0 - dist_screen));
	// Splat it on the near plane in the direction of the normal
	float4 pixelPos = float4(eye_pos.xyz - normal * point_radius, 1.0);
	// Project the pixel to clip space
	float4 clipPos = mul(pixelPos, projection_mat);
	// Convert to homogeneous device coordinates
	depth_out = clipPos.z / clipPos.w;
	// Emit color as Prussian Blue
    // col = float4(0.0, 0.49, 0.83, .25);
    col = float4(depth_out, depth_out, depth_out, 1.00);
}